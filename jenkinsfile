pipeline {
    agent any 

   parameters {
            booleanParam(name: 'PLAN_TERRAFORM', defaultValue: false, description: 'Check to plan Terraform changes')
            booleanParam(name: 'APPLY_TERRAFORM', defaultValue: false, description: 'Check to apply Terraform changes')
            booleanParam(name: 'DESTROY_TERRAFORM', defaultValue: false, description: 'Check to apply Terraform changes')
    }


stages {
    stage('Clone Repository') {
        steps {
            // Clean workspace before cloning (optional)
            deleteDir()
            // Clone git repo 
            git branch: 'main'
            url: git@github.com:reflection21/devops-project-1.git
            // ll
            sh "ls -lart"
        }
    }
stage('Terraform init'){
    steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-reflection	']]){
            dir('infrastructure'){
                sh 'echo "=================Terraform Plan=================="'
                sh 'terraform init'
            }
        }
    }
}
stage('Terraform plan'){
    steps {
        script {
            if(params.PLAN_TERRAFORM) {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-reflection	']]){
                    dir('infrastructure') {
                        sh 'echo "=================Terraform Plan=================="'
                        sh 'terraform plan'
                    }
                }
            }
        }
    }
}
stage('Terraform apply'){
    steps {
        script {
            if(params.APPLY_TERRAFORM) {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-reflection	']]){
                    dir('infrastructure') {
                        sh 'echo "=================Terraform Apply=================="'
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }
    }
}
stage('Terraform destroy'){
    steps {
        script {
            if(params.DESTROY_TERRAFORM) {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-reflection	']]){
                    dir('infrastructure') {
                        sh 'echo "=================Terraform Destroy=================="'
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }
}









